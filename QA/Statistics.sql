SELECT 
    'PUNKT' AS TABLENAME, NULL AS INFOTYPE, 
    SUM(CASE WHEN REGISTRERINGTIL IS NULL THEN 1 ELSE 0 END) AS CURRENTINSTANSES, 
    SUM(CASE WHEN REGISTRERINGTIL IS NOT NULL THEN 1 ELSE 0 END) AS PREVIOUSINSTANSES, 
    COUNT(REGISTRERINGFRA) AS TOTALINSTANSES
FROM PUNKT
GROUP BY 1
UNION ALL 

SELECT 
    'GEOMETRIOBJEKT' AS TABLENAME, NULL AS INFOTYPE, 
    SUM(CASE WHEN REGISTRERINGTIL IS NULL THEN 1 ELSE 0 END) AS CURRENTINSTANSES, 
    SUM(CASE WHEN REGISTRERINGTIL IS NOT NULL THEN 1 ELSE 0 END) AS PREVIOUSINSTANSES, 
    COUNT(REGISTRERINGFRA) AS TOTALINSTANSES
FROM GEOMETRIOBJEKT 
GROUP BY 1
UNION ALL 

SELECT 
    'KOORDINAT' AS TABLENAME, t.SRID AS INFOTYPE, 
    SUM(CASE WHEN k.REGISTRERINGTIL IS NULL THEN 1 ELSE 0 END) AS CURRENTINSTANSES, 
    SUM(CASE WHEN k.REGISTRERINGTIL IS NOT NULL THEN 1 ELSE 0 END) AS PREVIOUSINSTANSES, 
    COUNT(k.REGISTRERINGFRA) AS TOTALINSTANSES
FROM KOORDINAT k INNER JOIN SRIDTYPE t ON k.SRIDID = t.SRIDID
GROUP BY t.SRID
UNION ALL 

SELECT 
    'PUNKTINFO' AS TABLENAME, t.INFOTYPE AS INFOTYPE, 
    SUM(CASE WHEN p.REGISTRERINGTIL IS NULL THEN 1 ELSE 0 END) AS CURRENTINSTANSES, 
    SUM(CASE WHEN p.REGISTRERINGTIL IS NOT NULL THEN 1 ELSE 0 END) AS PREVIOUSINSTANSES, 
    COUNT(p.REGISTRERINGFRA) AS TOTALINSTANSES
FROM PUNKTINFO p INNER JOIN PUNKTINFOTYPE t ON p.INFOTYPEID = t.INFOTYPEID
GROUP BY t.INFOTYPE
UNION ALL 

SELECT 
    'OBSERVATION' AS TABLENAME, t.OBSERVATIONSTYPE AS INFOTYPE, 
    SUM(CASE WHEN o.REGISTRERINGTIL IS NULL THEN 1 ELSE 0 END) AS CURRENTINSTANSES, 
    SUM(CASE WHEN o.REGISTRERINGTIL IS NOT NULL THEN 1 ELSE 0 END) AS PREVIOUSINSTANSES, 
    COUNT(o.REGISTRERINGFRA) AS TOTALINSTANSES
FROM OBSERVATION o INNER JOIN OBSERVATIONTYPE t ON o.OBSERVATIONSTYPEID = t.OBSERVATIONSTYPEID 
GROUP BY t.OBSERVATIONSTYPE
UNION ALL 

SELECT 
    'BEREGNING' AS TABLENAME, NULL AS INFOTYPE, 
    SUM(CASE WHEN REGISTRERINGTIL IS NULL THEN 1 ELSE 0 END) AS CURRENTINSTANSES, 
    SUM(CASE WHEN REGISTRERINGTIL IS NOT NULL THEN 1 ELSE 0 END) AS PREVIOUSINSTANSES, 
    COUNT(REGISTRERINGFRA) AS TOTALINSTANSES
FROM BEREGNING 
GROUP BY 1
UNION ALL 

SELECT 
    'BEREGNING_KOORDINAT' AS TABLENAME, NULL AS INFOTYPE, 
    COUNT(*) AS CURRENTINSTANSES, 
    0 AS PREVIOUSINSTANSES, 
    COUNT(*) AS TOTALINSTANSES
FROM BEREGNING_KOORDINAT 
GROUP BY 1
UNION ALL

SELECT 
    'BEREGNING_OBSERVATION' AS TABLENAME, NULL AS INFOTYPE, 
    COUNT(*) AS CURRENTINSTANSES, 
    0 AS PREVIOUSINSTANSES, 
    COUNT(*) AS TOTALINSTANSES
FROM BEREGNING_OBSERVATION 
GROUP BY 1
UNION ALL

SELECT 
    'SAG' AS TABLENAME, NULL AS INFOTYPE, 
    COUNT(REGISTRERINGFRA) AS CURRENTINSTANSES, 
    0 AS PREVIOUSINSTANSES, 
    COUNT(REGISTRERINGFRA) AS TOTALINSTANSES
FROM SAG 
GROUP BY 1
UNION ALL 

SELECT 
    'SAGSEVENT' AS TABLENAME, t.EVENT AS INFOTYPE, 
    COUNT(s.REGISTRERINGFRA) AS CURRENTINSTANSES, 
    0 AS PREVIOUSINSTANSES, 
    COUNT(s.REGISTRERINGFRA) AS TOTALINSTANSES
FROM SAGSEVENT s INNER JOIN EVENTTYPE t ON s.EVENTTYPEID = t.EVENTTYPEID
GROUP BY t.EVENT

ORDER BY TABLENAME, INFOTYPE
;
